When would you want to use a remote repository rather than keeping all your work
local?

    Using a remote repository rather than keeping all my work local comes in handy when 1) I want to back up a copy in the cloud in case something happens to my local computer and 2) I want to work with others collaboratively on a project and 3) I want to share my work publicly (anyone can download from GitHub or other public website)

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because lots of people could be changing the remote repository and you don't want to just pull what people put up there. You want to be in control of what gets pulled into your local repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches happen on one repository and copies a commit. Clones copy entire repositories and can happen on local and between local and GitHub. Forks copy entire repositories from/to GitHub.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can work with it offline. You can work with it on your computer - e.g. use git log and git diff on it.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would use another version control system, such as Bit Bucket with Mercurial. Easier than something like google docs because of the features such as git diff and branches. Harder in that would have to learn a whole new system.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
